
<%= if @live_action in [:new, :edit] do %>
  <%= live_modal @socket, VispanaWeb.NodeLive.FormComponent,
    id: @node.id || :new,
    title: "Vispana"<>@page_title,
    action: @live_action,
    node: @node,
    return_to: Routes.node_index_path(@socket, :index) %>
<% end %>

<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js" defer></script>

<!-- menu -->
<%= live_component VispanaWeb.Menu, id: :menu, config_host: @config_host %>

<div class="flex-1 h-screen p-6 md:mt-16 overflow-x-auto">
  <!-- top bar -->
  <div>
    <div class="space-x-1 w-full">
      <div class="text-right font-flow" style="text-align: right">

          <%= f = form_for @changeset, "#", id: "form", phx_change: "refresh_interval", class: "block-inline"%>
            <a class="btn btn-square btn-sm bg-standout-blue border-0 hover:bg-standout-blue hover:border-0 active:border-0" phx-click="refresh">
              <i class="fas fa-sync-alt"></i>
            </a>
            <%= select f, :interval, ["Off": -1, "15s": 15000, "30s": 30000, "1m": 60000, "5m": 300000, "10m": 600000, "30m": 1800000, "1h": 3600000],
            class: "select select-sm w-40 max-w-xs bg-standout-blue text-xs focus:ring-0" %>
        </form>
      </div>
    </div>
  </div>

  <!-- body content -->
  <div class="flex-1 max-h-full bg-darkest-blue">
    <div class="flex flex-grow flex-col pt-4 normal-case">
      <div class="-my-2 sm:-mx-6 lg:-mx-8 overflow-x-auto">
        <div class="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
          <div class="shadow border-b border-darkest-blue sm:rounded-lg">
            <%= if @is_loading == false do %>

              <div class="flex">
                <!--actual component start-->
                <div x-data="{ activeTab: 0, tabs: [ <%= for contentCluster <- @nodes.contentClusters do %>'<%= contentCluster.clusterId %>', <% end %> ]}" class="w-full">
                  <ul class="flex justify-left items-left min-w-full">
                    <template x-for="(tab, index) in tabs" :key="index">
                      <li class="cursor-pointer text-xs py-2 px-4 text-gray-500  border-b-2 " :class="activeTab===index ? 'text-yellow-400 border-yellow-400' : 'border-gray-500'" @click="activeTab = index" x-text="tab"></li>
                    </template>
                    <li class="flex-grow text-xs py-2 px-4 text-gray-500 border-gray-600 border-b-2"></li>
                  </ul>

                  <div class="w-full text-center mx-auto">
                    <%= @nodes.contentClusters |> Enum.with_index |> Enum.map(fn({contentCluster, index}) -> %>
                      <div x-show="activeTab===<%= index %>">
                        <!-- tab content -->
                        <div class="flex flex-wrap justify-center">
                          <div class="flex-auto mt-6">
                            <div  style="min-width: 200px; margin-right: 0.75rem;">
                              <div class="w-full max-w-sm text-center bg-standout-blue rounded-md shadow-md border border-1 border-standout-blue" style="padding: 1.0rem; border-color: #26324a">
                                <div class="text-yellow-400 text-sm">
                                  Overview
                                </div>
                                <div>
                                  <p class="mt-2 text-xs text-gray-300">
                                      <span >Partitions: </span> <span><%= contentCluster.partitions %></span>
                                      |
                                      <span >Searchable copies: </span> <span><%= contentCluster.searchableCopies %></span>
                                      |
                                      <span >Redundancy: </span> <span><%= contentCluster.redundancy %></span>
                                  </p>
                                  <p class="mt-2 text-xs text-gray-300">
                                      <span>Groups: </span>
                                      <span>
                                        <%= contentCluster.contentGroups |> Enum.with_index |> Enum.map(fn({contentGroup, index}) -> %>

                                          group-<%= contentGroup.key %><span class="italic">(<%= length(contentGroup.contentNodes) %>)</span>

                                            <%= if index+1 < length(contentCluster.contentGroups) do %>
                                              |
                                            <% end %>
                                        <% end) %>
                                      </span>
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div class="flex-auto md:mt-4 mt-6">
                            <div class="flex justify-center h-full" style="height: 100%" >
                              <%= for schema <- contentCluster.schemas do %>
                                <div class="flex-grow flex-wrap" style="min-width: 200px; margin-right: 0.75rem;">
                                  <div class="w-full max-w-sm text-center bg-standout-blue rounded-md shadow-md border border-1 border-standout-blue" style="height: 100%; padding: 1.0rem; border-color: #26324a">
                                    <div class="text-yellow-400 text-sm">
                                      <%= schema.schemaName %>
                                    </div>

                                    <div>
                                        <p class="mt-2 text-xs">
                                          <span class="text-white">Documents: </span> <span class="text-gray-400"><%= schema.docCount %></span>
                                        </p>
                                    </div>
                                  </div>
                                </div>
                              <% end %>
                            </div>
                          </div>
                        </div>


                        <div class="text-yellow-400 text-sm pb-1 mt-4">
                          <span>Hosts in cluster  (<%= contentCluster.node_count %>)</span>
                        </div>

                        <table class="min-w-full min-h-full divide-y divide-darkest-blue rounded-md shadow-md border border-1 border-standout-blue">
                          <%= for contentGroup <- contentCluster.contentGroups do %>
                            <tbody class="bg-standout-blue divide-y divide-darkest-blue">
                                <tr>
                                  <th scope="col" class="px-6 text-sm font-medium text-blue-100 tracking-wider" style="padding-bottom: 0.75rem; text-align: left; width: 300px; min-width: 120px">
                                    <span>Hosts in group <%= contentGroup.key %> (<%= length(contentGroup.contentNodes) %>)</span>
                                  </th>
                                  <th scope="col" class="px-6 text-sm font-medium text-blue-100 tracking-wider" style="padding-bottom: 0.75rem; text-align: left; width: 300px;  min-width: 120px">
                                    <span>Distribution key</span>
                                  </th>
                                </tr>
                                <%= for contentNode <- contentGroup.contentNodes do %>
                                  <tr>
                                    <!-- host column -->
                                    <td class="px-6 py-4 whitespace-nowrap text-xs text-gray-400">
                                      <span><%= contentNode.host.hostname %></span>
                                    </td>
                                    <!-- group/distribution key column -->
                                    <td class="px-6 py-4">
                                      <div class="flex justify-center -m-2">
                                        <div class="px-2 h-6 text-green-400 text-xs font-extrabold rounded-md flex items-center justify-center border-dashed border border-green-400 m-2" style="min-width: 140px">
                                          distribution key: <%= contentNode.distributionKey %>
                                        </div>
                                      </div>
                                    </td>
                                  </tr>
                                <% end %>
                            </tbody>
                          <% end %>
                        </table>
                      </div>
                    <% end) %>
                  </div>

                </div>
                <!--actual component end-->
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- end content -->
</div>
